-possible-examples			[Exemplary] '$$project/Documentation/Examples'
-possible-annotated-cases	[Exemplary] '$$project/Documentation/Tests'

-recipe [Exemplary]

	set: $I6 = inform6/Tangled/inform6
	set: $I7 = inform7/Tangled/inform7
	set: $INTERNAL = inform7/Internal
	set: $WORKSPACE = $$workspace
	set: $ZINT = inform6/Tests/Assistants/dumb-frotz/dumb-frotz
	set: $GINT = inform6/Tests/Assistants/dumb-glulx/glulxe/glulxe
	set: $TOC = NO
	set: $BASIC = NO

	! First we decide whether to compile it for the Z-machine or Glulx.

	set: $VM = Z
	if: $FOR Glulx
		set: $VM = G
	endif
	if: $FOR C
		set: $VM = G
		set: $TOC = YES
	endif
	if: $LANGUAGE Basic
		set: $BASIC = YES
	endif

	! On the basis of which:

	if: $VM G
		set: $FORMAT 		= Inform6/32
		set: $EXT           = ulx
		set: $I6OPTIONS		= -E2SDwGx
		set: $INT			= $GINT
		set: $INTNAME		= dumb-glulxe
		set: $INTOPTIONS	= -u -q
	else
		set: $FORMAT		= Inform6/16
		set: $EXT           = z8
		set: $I6OPTIONS		= -E2SDwv8x
		set: $INT			= $ZINT
		set: $INTNAME		= dumb-frotz
		set: $INTOPTIONS	= -w 1000
	endif

	! Now we extract the source text from whatever file originated the test
	! case: this is a non-trivial operation when the file is an Extension or
	! an example, but is a simple copy operation otherwise.

	extract: $WORK/Example.inform/Source/story.ni $VM

	mkdir: $WORK/Transient
	step: find $WORK/Transient -mindepth 1 -delete

	mkdir: $$workspace/Actuals

	if: $CASE PM_Map%c*
		set: $I7OPTIONS = -format=$FORMAT -no-progress -no-resource-checking -fixtime -rng -sigils -log nothing -external inform7/Tests -transient $WORK/Transient -no-census-update -internal $INTERNAL
	else
		if: $BASIC YES
			set: $I7OPTIONS = -basic -format=$FORMAT -no-progress -no-resource-checking -fixtime -rng -sigils -log nothing -external inform7/Tests -transient $WORK/Transient -no-index -internal $INTERNAL
		else
			set: $I7OPTIONS = -format=$FORMAT -no-progress -no-resource-checking -fixtime -rng -sigils -log nothing -external inform7/Tests -transient $WORK/Transient -no-index -internal $INTERNAL
		endif
	endif

	set: $PIPELINE = 
	
	! First, problem message cases, where we require I7 to fail and with the
	! correct output.

	if: $TYPE problem
		set: $A = $$workspace/Actuals/$CASE.txt
		set: $I = $PATH/$CASE-I.txt
		debugger: lldb -f $I7 -- `$I7OPTIONS -require-problem $CASE -project $WORK/Example.inform $PIPELINE -crash-all
		fail step: $I7 `$I7OPTIONS -require-problem $CASE -project $WORK/Example.inform $PIPELINE >$A 2>&1
		or: 'failed to produce its namesake Problem message' $A
		show: $A
		exists: $I
		or: 'produced Problem(s), but no ideal transcript existed'
		match problem: $A $I
		or: 'produced the wrong Problem message(s)'
		pass: 'passed'
	endif

	step: rm -f notebook.glkdata prefs.glkdata barbara.glkdata

	! And then the general case.

	set: $I7CONSOLE = $WORK/Example.inform/Build/i7_output.txt
	if: $TOC YES
		mkdir: $PATH/_Textual
		mkdir: $PATH/_C

		set: $I7CLIB = inform7/Internal/Miscellany
	
		set: $TOUT = $PATH/_Textual/$CASE.intert
		set: $COUT = $PATH/_C/$CASE.c
		set: $OFILE = $WORK/Example.inform/Build/$CASE.o
		step: $I7 -fixtime -rng -sigils -format=C $WORK/Example.inform/Source/story.ni -variable *tout=$TOUT -o $COUT `$PIPELINE >$I7CONSOLE 2>&1
		or: 'failed with Problem message(s)' $I7CONSOLE

		set: $CCCONSOLE = $WORK/Example.inform/Build/cc_output.txt
		set: $LINKCONSOLE = $WORK/Example.inform/Build/link_output.txt
		set: $STORYFILE = $WORK/Example.inform/Build/final$$EXESUFFIX

		step: `$$CCOMPILER -o $OFILE $COUT -I $I7CLIB >$CCCONSOLE 2>&1
		or: 'failed to compile C' $CCCONSOLE

		step: `$$CLINKER -o $STORYFILE $OFILE `$$LINKFLAGS >$LINKCONSOLE 2>&1
		or: 'failed to link C' $LINKCONSOLE
	
		set: $A = $$workspace/Actuals/$CASE.txt
		set: $I = $PATH/$CASE-I.txt

		if: $BASIC YES
			step: $STORYFILE >$A 2>&1
			or: 'failed to run C program' $A
		else
			step: $STORYFILE <$SCRIPT >$A 2>&1
			or: 'failed to run C program' $A
		endif

		show: $A

		match text: $A $I
		or: 'C program misbehaved'

		step: rm -f notebook.glkdata prefs.glkdata barbara.glkdata

		pass: 'passed'
	else
		debugger: lldb -f $I7 -- `$I7OPTIONS -format=$FORMAT -project $WORK/Example.inform $PIPELINE -crash-all
		step: $I7 `$I7OPTIONS -format=$FORMAT -project $WORK/Example.inform $PIPELINE >$I7CONSOLE 2>&1
		or: 'failed with Problem message(s)' $I7CONSOLE
		show: $I7CONSOLE

		set: $I6SOURCE = $WORK/Example.inform/Build/auto.inf

		hash: $I6SOURCE $WORK/Example.inform/Build/checksum.txt
		or: 'passed (matching cached I6 known to work)'

		set: $I6CONSOLE = $WORK/Example.inform/Build/i6_output.txt
		set: $STORYFILE = $WORK/Example.inform/Build/output.$EXT

		step: $I6 `$I6OPTIONS $I6SOURCE $STORYFILE >$I6CONSOLE 2>&1
		or: 'failed to pass through Inform 6' $I6CONSOLE
		show i6: $I6CONSOLE

		set: $A = $$workspace/Actuals/$CASE.txt
		set: $I = $PATH/$CASE-I.txt

		if: $BASIC YES
			step: $INT `$INTOPTIONS $STORYFILE >$A 2>&1
			or: 'unable to run $INTNAME (do you need to make interpreters?)'
		else
			step: $INT `$INTOPTIONS $STORYFILE <$SCRIPT >$A 2>&1
			or: 'unable to run $INTNAME (do you need to make interpreters?)'
		endif

		exists: $I
		or: 'translated successfully but no ideal transcript existed'
		if: $VM G
			match glulxe transcript: $A $I
			or: 'played incorrectly'
		else
			match frotz transcript: $A $I
			or: 'played incorrectly'
		endif

		step: rm -f notebook.glkdata prefs.glkdata barbara.glkdata

		pass: 'passed'
	endif

-end
